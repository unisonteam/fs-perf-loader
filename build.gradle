apply plugin: 'java'

group = 'teanm.unison'
version = '1.0.17'
def formatGMT = new java.text.SimpleDateFormat("yyyy-MM-dd-HH:mm:ss")
formatGMT.setTimeZone(TimeZone.getTimeZone("GMT"))
def libraryVersion = version + "-" + formatGMT.format(new Date())

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    agent
    compileClasspath.extendsFrom(agent)
}

task fatJar(type: Jar) {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    dependsOn('saveLibraryVersionAsResource')

    from sourceSets.main.output
    from "${projectDir}/scripts"

    manifest {
        attributes 'Main-Class': 'team.unison.perf.PerfLoaderMain',
                'Build-Time': new Date(),
                'Build-Version': libraryVersion
    }
    archiveClassifier = "fat"
    from {
        configurations.runtimeClasspath.filter(f -> !f.getName().equals('tools.jar')).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    from {
        configurations.agent
    }
    with jar
}

artifacts {
    archives fatJar
}

task saveLibraryVersionAsResource {
    doLast {
        def resourcesDir = sourceSets.main.output.resourcesDir
        resourcesDir.mkdirs()
        new File(resourcesDir, "perf-loader.version").text = libraryVersion
    }
}

dependencies {
    agent group: 'org.apache.hadoop', name: 'hadoop-common', version: '3.3.1'
    agent group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: '3.3.1'
    agent group: 'org.apache.hadoop', name: 'hadoop-hdfs-client', version: '3.3.1'
    agent group: 'org.apache.ozone', name: 'ozone-filesystem-hadoop3', version: '1.3.0'
    agent group: 'org.apache.ozone', name: 'ozone-filesystem-hadoop3-client', version: '1.3.0'

    agent platform('software.amazon.awssdk:bom:2.20.45')
    agent 'software.amazon.awssdk:aws-core'
    agent 'software.amazon.awssdk:s3'
    agent 'software.amazon.awssdk:apache-client'
    // s3 ругается если использовать старый клиент, который есть на кластере
    // https://github.com/aws/aws-sdk-java-v2/issues/1372
    agent 'org.apache.httpcomponents:httpclient:4.5.14'
    agent 'io.prometheus:simpleclient:0.16.0'
    agent 'io.prometheus:simpleclient_pushgateway:0.16.0'

    compileOnly files("${System.properties['java.home']}/../lib/tools.jar")
    runtimeOnly files("${System.properties['java.home']}/../lib/tools.jar")
    testRuntimeOnly files("${System.properties['java.home']}/../lib/tools.jar")

    implementation group: 'com.jcraft', name: 'jsch', version: '0.1.55'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.5'
    implementation 'org.slf4j:slf4j-log4j12:2.0.5'
    implementation 'com.google.code.gson:gson:2.8.7'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.9.2'

    testImplementation group: 'org.hamcrest', name: 'hamcrest-junit', version: '2.0.0.0'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
}

test {
    useJUnitPlatform()

    testLogging.showStandardStreams = true
}